use bimap::BiMap;
use lazy_static::lazy_static;

lazy_static! {
    pub static ref cold_storage_objects_map: BiMap<u32, u32> = BiMap::from_iter(vec![
        (0xEEF30D7D, 0x00010000),
        (0xEFC20E4C, 0x00010001),
        (0xE8A4072E, 0x00020000),
        (0xE90B0795, 0x00020001),
        (0xE9D70861, 0x00020002),
        (0xEA6108EB, 0x00020003),
        (0xEB2F09B9, 0x00020004),
        (0xEB7D0A07, 0x00020005),
        (0xF06B0EF5, 0x00020006),
        (0xEBB70A41, 0x00020007),
        (0xEC0E0A98, 0x00020008),
        (0xEC530ADD, 0x00020009),
        (0xF0BA0F44, 0x0002000A),
        (0xED030B8D, 0x0002000B),
        (0xED870C11, 0x0002000C),
        (0xEE0A0C94, 0x0002000D),
        (0xF0F10F7B, 0x0002000E),
        (0xF1440FCE, 0x0002000F),
        (0xEE680CF2, 0x00020010),
        (0xF184100E, 0x00020011),
        (0xF1CD1057, 0x00020012),
        (0xEE880D12, 0x00020013),
        (0xF1FD1087, 0x00020014),
        (0xF24B10D5, 0x00020015),
        (0xF28E1118, 0x00020016),
        (0xF2BE1148, 0x00020017),
        (0xE84A06D4, 0x00030000),
        (0xE87E0708, 0x00030001),
        (0xE75C05E6, 0x00030002),
        (0xF2F5117F, 0x00030003),
        (0xE21800A2, 0x00030004),
        (0xE4D60360, 0x00030005),
        (0xF304118E, 0x00030006),
        (0xE72905B3, 0x00030007),
        (0xE3D0025A, 0x00030008),
        (0xE4960320, 0x00030009),
        (0xE4EF0379, 0x0003000A),
        (0xF32E11B8, 0x0003000B),
        (0xE71E05A8, 0x0003000C),
        (0xE70D0597, 0x0003000D),
        (0xF33011BA, 0x0003000E),
        (0xF33711C1, 0x00040000),
        (0xF36311ED, 0x00040001),
        (0xF3891213, 0x00040002),
        (0xF39E1228, 0x00040003),
        (0xF3A3122D, 0x00040004),
        (0xF3A81232, 0x00040005),
        (0xF3AD1237, 0x00040006),
        (0xF3BA1244, 0x00040007),
        (0xF3C1124B, 0x00040008),
        (0xF3C61250, 0x00040009),
        (0xF3DA1264, 0x0004000A),
        (0xF3DF1269, 0x0004000B),
        (0xF3F2127C, 0x0004000C),
        (0xF404128E, 0x0004000D),
        (0xF41C12A6, 0x0004000E),
        (0xF43012BA, 0x0004000F),
        (0xF43312BD, 0x00040010),
        (0xF43712C1, 0x00040011),
        (0xF43A12C4, 0x00040012),
        (0xF43D12C7, 0x00040013),
        (0xF44012CA, 0x00050000),
        (0xF45712E1, 0x00050001),
        (0xF46212EC, 0x00050002),
        (0xF46312ED, 0x00060000),
        (0xF49A1324, 0x00060001),
        (0xF4A3132D, 0x00060002),
        (0xF4CA1354, 0x00060003),
        (0xF4CB1355, 0x00060004),
        (0xF4D4135E, 0x00060005),
        (0xF4D5135F, 0x00060006),
        (0xF4E5136F, 0x00060007),
        (0xF4E71371, 0x00060008),
        (0xE17F0009, 0x00070000),
        (0xE1D0005A, 0x00070001),
        (0xE1E4006E, 0x00070002),
        (0xE1E70071, 0x00070003),
        (0xE1E80072, 0x00070004),
        (0xE1CF0059, 0x00070005),
        (0xE1EB0075, 0x00070006),
        (0xE1ED0077, 0x00070007),
        (0xE1D1005B, 0x00070008),
        (0xE1E5006F, 0x00070009),
        (0xF4E81372, 0x0007000A),
        (0xF4E91373, 0x0007000B),
        (0xF4EA1374, 0x0007000C),
        (0xF4EB1375, 0x0007000D),
        (0xE1E90073, 0x0007000E),
        (0xE1EC0076, 0x0007000F),
        (0xF4EC1376, 0x00070010),
        (0xE1E60070, 0x00070011),
        (0xF4ED1377, 0x00070012),
        (0xE1EA0074, 0x0008000A),
        (0xE1EE0078, 0x0008000E),
        (0xE55B03E5, 0x0008000F),
        (0xE57D0407, 0x00090000),
        (0xF4FA1384, 0x000C0009),
        (0xF5091393, 0x000C000A),
        (0xF50E1398, 0x000C000E),
        (0xF513139D, 0x000C000F),
        (0xF51713A1, 0x000C0010),
        (0xF51B13A5, 0x000C0011),
        (0xF51F13A9, 0x000C0012),
        (0xF52313AD, 0x000C0013),
        (0xF52713B1, 0x000C0014),
        (0xF52B13B5, 0x000C0015),
        (0xF52F13B9, 0x000C0016),
        (0xF53313BD, 0x000C0017),
    ]);
}


