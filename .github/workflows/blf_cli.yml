name: blf_cli
permissions:
  contents: write
on:
  push:
    branches: [ "main", "workflow", "beta" ]
    tags:
      - '*'
  pull_request:
    branches: [ "main", "workflow", "beta" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_cli:
    name: "Build"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2

      - name: Install Linux and Windows Cross Compilers
        run: |
          sudo apt-get update
          sudo apt-get install --yes --no-install-recommends \
            musl-tools \
            gcc-mingw-w64-x86-64-win32 \
            musl-dev \
            zlib1g-dev \
            libz-mingw-w64-dev

      - name: Set up MacOS Cross Compiler
        uses: Timmmm/setup-osxcross@v2
        with:
          osx-version: "12.3"

      - name: Add osxcross to PATH
        run: echo "${HOME}/osxcross/target/bin" >> $GITHUB_PATH

      - name: Install Rustup targets
        run: rustup target add x86_64-unknown-linux-musl x86_64-pc-windows-gnu x86_64-apple-darwin aarch64-apple-darwin

      - name: Configure cross-compilers
        run: |
          echo "LIBZ_SYS_STATIC=1" >> $GITHUB_ENV
          echo "CC=o64-clang" >> $GITHUB_ENV
          echo "CXX=o64-clang++" >> $GITHUB_ENV

      - name: Build
        working-directory: ./blf_cli
        run: |
          cargo build --release --target x86_64-unknown-linux-musl
          cargo build --release --target x86_64-pc-windows-gnu
          cargo build --release --target x86_64-apple-darwin
          cargo build --release --target aarch64-apple-darwin

      - name: Run tests
        working-directory: ./blf_cli
        run: cargo test --verbose

      - name: Upload Windows Binaries
        uses: actions/upload-artifact@v4.6.1
        with:
          name: blf_cli Windows (x86_64-pc-windows-gnu)
          path: ./target/x86_64-pc-windows-gnu/release/blf_cli.exe

      - name: Upload Linux Binaries
        uses: actions/upload-artifact@v4.6.1
        with:
          name: blf_cli Linux (x86_64-unknown-linux-musl)
          path: ./target/x86_64-unknown-linux-musl/release/blf_cli

      - name: Upload MacOS Binaries (Apple Silicon)
        uses: actions/upload-artifact@v4.6.1
        with:
          name: blf_cli MacOS (aarch64-apple-darwin)
          path: ./target/aarch64-apple-darwin/release/blf_cli

      - name: Upload MacOS Binaries (x86)
        uses: actions/upload-artifact@v4.6.1
        with:
          name: blf_cli MacOS (x86_64-apple-darwin)
          path: ./target/x86_64-apple-darwin/release/blf_cli

      - name: Rename release binaries
        run: |
          mv ./target/x86_64-pc-windows-gnu/release/blf_cli.exe blf_cli-windows.exe
          mv ./target/x86_64-unknown-linux-musl/release/blf_cli blf_cli-linux
          mv ./target/aarch64-apple-darwin/release/blf_cli blf_cli-mac-arm
          mv ./target/x86_64-apple-darwin/release/blf_cli blf_cli-mac-intel

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: github.ref_type == 'tag'
        with:
          draft: true
          files: |
            blf_cli-windows.exe
            blf_cli-linux
            blf_cli-mac-arm
            blf_cli-mac-intel
